var m=class{controlledWindow;open;onClose;constructor(e){this.open=!1,this.onClose=e}init({parentWindow:e,url:t,width:n=375,height:o=650,target:i="popupWindow"}){let r=e.open(t,i,this.createPopupString(n,o));if(!r)throw new Error("Failed to open popup. This may be caused by the browsers' popup blocker");return this.controlledWindow=r??void 0,this.open=!0,this.registerListeners(),this.controlledWindow}close(){var e;(e=this.controlledWindow)==null||e.close()}registerListeners(){let e=setInterval(()=>{var t;(t=this.controlledWindow)!=null&&t.closed&&(clearInterval(e),this.controlledWindow=void 0,this.open=!1,this.onClose&&this.onClose())},50)}createPopupString(e,t){let n=window.outerHeight/2+window.screenY-t/2,o=window.outerWidth/2+window.screenX-e/2,i=this.getChromeVersion();return`${i&&i>99?"popup=true,":""}height=${t},width=${e},left=${o},top=${n},resizable=yes,scrollbars=yes,toolbar=yes,menubar=true,location=no,directories=no,status=yes`}getChromeVersion(){let e=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);return e?parseInt(e[2]):null}};var g=["http://localhost:3001","https://www.crossmint.com","https://staging.crossmint.com"];var U=(n=>(n.REQUEST_ACCOUNTS="crossmint_requestAccounts",n.SIGN_MESSAGE="crossmint_signMessage",n.USER_REJECT="crossmint_userReject",n))(U||{});var y=s=>{let e=window.document.createElement("template"),t=s.trim();return e.innerHTML=t,e.content.firstChild};var w="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 40.91 40.91'%3E%3Cpath d='M1.37,18.32H5.52a4.27,4.27,0,0,1,4.27,4.27v2.14A4.27,4.27,0,0,0,14.05,29a4.27,4.27,0,0,1,4.27,4.27v6.29m-6.4-36.3V6.59a5.33,5.33,0,0,0,5.34,5.33h1.06a4.27,4.27,0,0,1,4.27,4.27,4.27,4.27,0,1,0,8.54,0,4.27,4.27,0,0,1,4.27-4.27h2.27M26.86,38.57V33.26A4.27,4.27,0,0,1,31.13,29h6.54m2-8.53A19.2,19.2,0,1,1,34,6.88,19.12,19.12,0,0,1,39.66,20.46Z' style='fill:none;stroke:%2367797f;stroke-linecap:round;stroke-linejoin:round;stroke-width:2.5px'/%3E%3C/svg%3E";function _(s){return new Promise((e,t)=>{try{let n=document.createElement("img");n.onload=()=>e(!0),n.onerror=()=>e(!1),n.src=s}catch(n){t(n)}})}var I=s=>{let{document:e}=s,t=e.querySelector('head > meta[property="og:site_name"]');if(t)return t.content;let n=e.querySelector('head > meta[name="title"]');return n?n.content:e.title&&e.title.length>0?e.title:s.location.hostname};async function L(s){try{let{document:e}=s,t=e.querySelector('head > link[rel="shortcut icon"]');return t&&await _(t.href)||(t=Array.from(e.querySelectorAll('head > link[rel="icon"]')).find(n=>Boolean(n.href)),t&&await _(t.href))?t.href:w}catch{return w}}async function E(s){return{name:s&&s.name?s.name:I(window),icon:s&&s.icon?s.icon:await L(window),url:window.location.origin}}async function p(s){return new Promise(e=>setTimeout(e,s))}var d=class{_config;get _frameUrl(){let{environment:e,chain:t,projectId:n,forceWalletSelection:o}=this._config,i=n!=null?`&projectId=${n}`:"",r=o!=null?`&forceWalletSelection=${o}`:"";return`${e}/2023-06-09/frame?chain=${t}${i}${r}`}constructor(e){console.log("[crossmint-connect] Initialized with version:",e.libVersion),this._config=e}static init(e){return new d(e)}async login(){let e=new m;if(e.init({parentWindow:window,url:this._frameUrl}),this._config.autoConnect){let t=await this.getLoginFromIFrame();if(t!=null&&t.length>0)return console.log("[crossmint-connect] Received account from auto connect"),e.close(),t}return await new Promise(async(t,n)=>{console.log("[crossmint-connect] Waiting login");let o,i=async r=>{var l;if(!g.includes(r.origin))return;let{request:a,data:c}=r.data;switch(a){case"crossmint_requestAccounts":let{account:u}=c;o=u,(l=e.controlledWindow)==null||l.close();break;case"crossmint_userReject":console.log("[crossmint-connect] User rejected login"),o=null;break;default:break}};for(window.addEventListener("message",i);e.open&&e.controlledWindow;)this.postMessage(e.controlledWindow,"crossmint_requestAccounts",void 0,this._frameUrl),await p(100);window.removeEventListener("message",i),t(o)})}async signMessage(e){let t=new m;return t.init({parentWindow:window,url:this._frameUrl}),await new Promise(async(n,o)=>{console.log("[crossmint-connect] Waiting sign message");let i,r=async a=>{var u;if(!g.includes(a.origin))return;let{request:c,data:l}=a.data;switch(c){case"crossmint_signMessage":let{signedMessage:h}=l;i=new Uint8Array(h.split(",").map(Number)),(u=t.controlledWindow)==null||u.close();break;case"crossmint_userReject":console.log("[crossmint-connect] User rejected signMessage"),i=null;break;default:break}};for(window.addEventListener("message",r);t.open&&t.controlledWindow;)await this.postMessage(t.controlledWindow,"crossmint_signMessage",{message:e},this._frameUrl),await p(100);window.removeEventListener("message",r),n(i)})}async signMessages(e,t){let n=new m;return n.init({parentWindow:window,url:this._frameUrl}),await new Promise(async(o,i)=>{console.log("[crossmint-connect] Waiting sign messages");let r,a=async c=>{var h;if(!g.includes(c.origin))return;let{request:l,data:u}=c.data;switch(l){case"crossmint_signMessage":let{signedMessages:C}=u;r=Object.keys(C).reduce((v,b)=>({...v,[b]:new Uint8Array(C[b].split(",").map(Number))}),{}),(h=n.controlledWindow)==null||h.close();break;case"crossmint_userReject":console.log("[crossmint-connect] User rejected signMessages"),r=null;break;default:break}};for(window.addEventListener("message",a);n.open&&n.controlledWindow;)await this.postMessage(n.controlledWindow,"crossmint_signMessage",{message:e,publicKeys:t},this._frameUrl),await p(100);window.removeEventListener("message",a),o(r)})}async cleanUp(){}async postMessage(e,t,n,o="*"){return e.postMessage({request:t,data:{libVersion:this._config.libVersion,chain:this._config.chain,projectId:this._config.projectId,siteMetadata:await E(this._config.appMetadata),...n}},o)}async getLoginFromIFrame(){console.log("[crossmint] Attempting auto connect");let e=y(`<iframe
              id="crossmintIframe"
              class="crossmintIframe"
              src="${this._frameUrl}"
              style="display: none; position: fixed; top: 0; right: 0; width: 100%;
              height: 100%; border: none; border-radius: 0; z-index: 999"
            ></iframe>`);return await new Promise((t,n)=>{try{window.document.body.appendChild(e),e.addEventListener("load",async()=>{let o=setTimeout(()=>{console.log("[crossmint] Failed to auto connect within",this._config.maxTimeAutoConnectMs,"ms"),window.removeEventListener("message",i),window.document.body.removeChild(e),t(void 0)},3e3),i=async r=>{if(console.log(g.includes(r.origin)),!g.includes(r.origin))return;console.log("\u{1F680} ~ CrossmintEmbed ~ handleMessage ~ e.data:",r.data);let{request:a,data:c}=r.data;switch(a){case"crossmint_requestAccounts":let{account:l}=c;clearTimeout(o),t(l);break;default:break}};window.addEventListener("message",i),this.postMessage(e.contentWindow,"crossmint_requestAccounts",void 0,this._frameUrl)})}catch(o){console.log(o),t(void 0)}})}};import{WalletPublicKeyError as O,WalletSignTransactionError as T,WalletWindowClosedError as f}from"@solana/wallet-adapter-base";import{ethers as P}from"ethers";var M="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 1000 995.87'%3E%3Cdefs%3E%3ClinearGradient id='a' x1='13.93' y1='11.32' x2='984.35' y2='981.73' gradientUnits='userSpaceOnUse'%3E%3Cstop offset='0.2' stop-color='%2300ff85'/%3E%3Cstop offset='1' stop-color='%2300e0ff'/%3E%3C/linearGradient%3E%3C/defs%3E%3Cpath d='M970.31,889.5s9.6-.12,16,4.63c0,0,19.09-38.79-49.46-107.81,0,0,9.49-4.27,21.94-.12,0,0-1.93-59.1-73.09-113.18,0,0,10.47-3.84,15.69-1.86,0,0-27.63-52.78-99.5-81a52.06,52.06,0,0,1,24.19-5.86s-53.61-63.72-146.75-58.19c0,0,4.9-5.69,14.87-9.25,0,0-15-10.19-50.85-14.64-19.07-4.25-43.24-5.36-43.24-5.36,7.79-.22,24.11-4.81,33.63-7.68,39.34-4.22,77.39-14.39,95.74-36.48,0,0-7.91,2.53-19.21-8.3,0,0,81.51-7.83,141-85.95,0,0-20.56,8.19-32.83-.41,0,0,73.83-29.59,91.38-83.68,0,0-14,9-30.3,7.06,0,0,45.12-31.13,62-84.74,0,0-13.88,7.39-24.79,3,0,0,52-37,45-92.39,0,0-8.19,12.57-25.26,8.18,0,0,54.35-59.34,31.42-115.16,0,0-40.32-5.22-76.85,29.41,0,0-.12-9.6,4.63-16,0,0-38.78-19.09-107.81,49.46,0,0-4.27-9.49-.12-21.94,0,0-59.1,1.93-113.18,73.09,0,0-3.84-10.47-1.86-15.69,0,0-52.78,27.63-81,99.5a52,52,0,0,1-5.85-24.19S522,227.52,527.55,320.66c0,0-5.69-4.9-9.25-14.87,0,0-7.46,11-12.41,36.61-4.85,22.51-7.14,54-7.14,54,.13-16.77-8.69-46.09-12.27-57.29C481.16,307.3,471,278.5,452.7,263.28c0,0,2.53,7.9-8.3,19.21,0,0-7.83-81.52-85.95-141,0,0,8.19,20.56-.41,32.84,0,0-29.59-73.83-83.68-91.39,0,0,9,14,7.06,30.31,0,0-31.13-45.13-84.74-62,0,0,7.39,13.87,3,24.79,0,0-37-51.95-92.39-44.95,0,0,12.57,8.18,8.18,25.26C115.44,56.4,56.1,2,.28,25c0,0-5.22,40.32,29.41,76.85,0,0-9.6.12-16-4.62,0,0-19.09,38.78,49.46,107.8,0,0-9.49,4.27-21.94.12,0,0,1.93,59.1,73.09,113.19,0,0-10.47,3.83-15.69,1.85,0,0,27.63,52.78,99.5,81A52,52,0,0,1,173.91,407s53.61,63.73,146.75,58.19c0,0-4.9,5.69-14.87,9.25,0,0,7.12,4.82,23.18,9.28,21.27,8,91.82,10.59,91.82,10.59-10.91,1.84-27,6.31-43.7,11.44-42.68,3.55-85.62,13.49-105.47,37.4,0,0,7.9-2.53,19.21,8.3,0,0-81.52,7.83-141,85.95,0,0,20.56-8.19,32.84.41,0,0-73.83,29.59-91.39,83.67,0,0,14-9,30.31-7,0,0-45.13,31.13-62,84.74,0,0,13.87-7.4,24.79-3,0,0-52,37-45,92.39,0,0,8.18-12.57,25.26-8.18,0,0-54.36,59.34-31.43,115.16,0,0,40.32,5.22,76.85-29.41,0,0,.12,9.6-4.62,16,0,0,38.78,19.09,107.8-49.46,0,0,4.27,9.49.12,21.94,0,0,59.1-1.94,113.19-73.1,0,0,3.83,10.48,1.85,15.7,0,0,52.78-27.63,81-99.51a52,52,0,0,1,5.85,24.2s63.73-53.61,58.19-146.75c0,0,5.69,4.9,9.25,14.87,0,0,19.18-28.29,16.39-99.78,3.85,14.84,7.89,29.14,11.61,41.73,4.2,39.44,14.36,77.63,36.5,96,0,0-2.53-7.91,8.3-19.22,0,0,7.83,81.52,85.95,141,0,0-8.18-20.56.41-32.83,0,0,29.59,73.83,83.68,91.38,0,0-9-14-7.06-30.3,0,0,31.13,45.12,84.74,62,0,0-7.39-13.87-3-24.78,0,0,37,51.94,92.39,45,0,0-12.57-8.19-8.18-25.26,0,0,59.34,54.35,115.16,31.42C999.72,966.35,1004.94,926,970.31,889.5ZM499.57,517.66C381.15,592.75,144.65,854.75,144.65,854.75c34-84.53,218.09-288.31,342.57-358.25C410.92,377.61,151,143,151,143,235.42,177,438.56,360.41,508.88,484.87c126.6-72,353.7-341.72,353.7-341.72-10.58,66.61-228.87,298-342.5,362.62C590.76,632.07,862.64,861,862.64,861,795.87,850.35,563.52,631.06,499.57,517.66Z' style='fill:url(%23a)'/%3E%3C/svg%3E",S="Crossmint";var x="0.10.0-alpha.0";var R=(n=>(n.PROD="https://www.crossmint.com",n.STAGING="https://staging.crossmint.com",n.LOCAL="http://localhost:3001",n))(R||{});var N=(o=>(o.SOLANA="solana",o.ETHEREUM="ethereum",o.POLYGON="polygon",o.CARDANO="cardano",o))(N||{});function A(s){return{libVersion:x,projectId:s.projectId,environment:s.environment||"https://www.crossmint.com",autoConnect:s.autoConnect??!0,maxTimeAutoConnectMs:s.maxTimeAutoConnectMs||300,appMetadata:s.appMetadata,chain:s.chain,forceWalletSelection:s.forceWalletSelection}}var W=class{name=S;url="https://www.crossmint.com";icon=M;_connecting;_publicKeys;_config;_client;constructor(e){this._connecting=!1,this._publicKeys=[],this._config=A({...e})}get publicKey(){return this._publicKeys.length==0?null:this._publicKeys[0]}get publicKeys(){return this._publicKeys.length==0?null:this._publicKeys}get connecting(){return this._connecting}get connected(){return this._publicKeys.length>0}async connect(){try{if(this.connected||this.connecting)return;this._connecting=!0;let e=d.init(this._config),t=await e.login();if(t===null)throw new f("User rejected the request");if(t===void 0||t.length===0)throw new f("User rejected the request or closed the window");let n=[];for(let o of t)try{n.push(P.utils.getAddress(o))}catch(i){throw new O(i==null?void 0:i.message,i)}return this._client=e,this._publicKeys=n,this._publicKeys[0]}catch(e){throw e}finally{this._connecting=!1}}async disconnect(){var e;(e=this._client)==null||e.cleanUp(),this._client=void 0,this._publicKeys=[]}async signMessage(e){try{if(!this._client||!this.connected)throw new Error("Not connected");let t=await this._client.signMessage(new TextEncoder().encode(e));if(t===null)throw new f("User rejected the request");if(t===void 0)throw new T("User rejected the request or closed the window");return new TextDecoder().decode(t)}catch(t){throw t}}async signMessageWithAllAddresses(e){try{if(!this._client||!this.connected)throw new Error("Not connected");let t=await this._client.signMessages(new TextEncoder().encode(e),this.publicKeys);if(t===null)throw new f("User rejected the request");if(t===void 0)throw new T("User rejected the request or closed the window");return Object.keys(t).reduce((n,o)=>({...n,[o]:new TextDecoder().decode(t[o])}),{})}catch(t){throw t}}};export{N as BlockchainTypes,W as CrossmintEVMWalletAdapter,U as CrossmintEmbedRequestType,R as CrossmintEnvironment,d as default};
